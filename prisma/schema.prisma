// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

enum Status {
  PENDING
  SUCCESS
  CANCELED
}

model User {
  id           Int            @id @default(autoincrement())
  firstName    String         @map("first_name") @db.VarChar(50)
  lastName     String         @map("last_name") @db.VarChar(50)
  email        String         @unique
  password     String
  phoneNumber  String         @map("phone_number") @db.VarChar(10)
  isActive     Boolean?       @default(true) @map("is_active")
  createdAt    DateTime       @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt    DateTime       @default(now()) @updatedAt @map("updated_at") @db.Timestamp(0)
  role         Role           @default(USER)
  profileImage String?        @map("profile_image")
  contact      Contact?
  baskets      Basket[]
  transactions Transactions[]

  @@map("users")
}

model Contact {
  id            Int      @id @default(autoincrement())
  userId        Int      @unique @map("user_id")
  user          User     @relation(fields: [userId], references: [id])
  province      String
  district      String
  subDistrict    String?  @map("sub_district")
  postCode      String   @map("post_code")
  contactName   String?  @map("contact_name")
  contactNumber String?  @map("contact_number")
  createdAt     DateTime @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt     DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamp(0)

  @@map("contacts")
}

model Book {
  id            Int          @id @default(autoincrement())
  enTitle       String?      @map("en_title")
  thTitle       String?      @map("th_title")
  createdAt     DateTime     @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt     DateTime     @default(now()) @updatedAt @map("updated_at") @db.Timestamp(0)
  isActive      Boolean?     @default(true) @map("is_active")
  enDescription String?      @map("en_description")
  thDescription String?      @map("th_description")
  amount        Int          @default(0)
  bookImage     String?      @map("book_image")
  categoryId    Int          @map("category_id")
  category      Category     @relation(fields: [categoryId], references: [id])
  basketItem    BasketItem[]
  price         Price[]

  @@map("books")
}

model Price {
  id        Int       @id @default(autoincrement())
  price     Int
  bookId    Int       @map("book_id")
  createdAt DateTime  @default(now()) @db.Timestamp(0)
  expiredAt DateTime? @db.Timestamp(0)
  Book      Book?     @relation(fields: [bookId], references: [id])

  @@map("prices")
}

model Category {
  id        Int      @id @default(autoincrement())
  enTitle   String?  @map("en_title")
  thTitle   String?  @map("th_title")
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamp(0)
  isActive  Boolean? @default(true) @map("is_active")
  books     Book[]

  @@map("categorys")
}

model Basket {
  id           Int            @id @default(autoincrement())
  userId       Int            @map("user_id")
  user         User           @relation(fields: [userId], references: [id])
  createdAt    DateTime       @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt    DateTime       @default(now()) @updatedAt @map("updated_at") @db.Timestamp(0)
  isPaid       Boolean        @default(false)
  transactions Transactions[]
  BasketItem   BasketItem[]

  @@map("baskets")
}

model BasketItem {
  id        Int      @id @default(autoincrement())
  basketId  Int      @map("basket_id")
  basket    Basket   @relation(fields: [basketId], references: [id])
  bookId    Int      @map("book_id")
  book      Book     @relation(fields: [bookId], references: [id])
  amount    Int      @default(0)
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamp(0)

  @@map("basket_items")
}

model Transactions {
  id            Int     @id @default(autoincrement())
  userId        Int     @map("user_id")
  user          User    @relation(fields: [userId], references: [id])
  basketId      Int     @map("basket_id")
  basket        Basket  @relation(fields: [basketId], references: [id])
  totalPrice    Int     @map("total_price")
  status        Status  @default(PENDING)
  province      String
  district      String
  subDistrct    String? @map("sub_district")
  postCode      String  @map("post_code")
  contactName   String? @map("contact_name")
  contactNumber String? @map("contact_number")
  note          String?

  @@map("transactions")
}
